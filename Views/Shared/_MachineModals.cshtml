@model Online.Models.MacchinaEditModel

<div class="modal fade" id="editMacchinaModal" tabindex="-1" aria-labelledby="editMacchinaModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form asp-controller="Home" asp-action="Edit" method="post" id="editMacchinaForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="editMacchinaModalLabel">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="me-2"><path d="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" /></svg>
                        Modifica Macchina
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="OriginalNomeMacchina" id="editOriginalNomeMacchina" />
                    <input type="hidden" asp-for="OriginalIP_Address" id="editOriginalIPAddress" />

                    <div class="mb-4">
                        <label asp-for="NomeMacchina" class="form-label">Nome Macchina</label>
                        <input asp-for="NomeMacchina" class="form-control" id="editNomeMacchina" placeholder="es. Pressa Idraulica 1" />
                        <span asp-validation-for="NomeMacchina" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="IP_Address" class="form-label">Indirizzo IP</label>
                        <div class="input-group">
                            <input asp-for="IP_Address" class="form-control" id="editIPAddress" placeholder="192.168.1.100" />
                            <button class="btn btn-outline" type="button" onclick="validateIPConnectivity('editIPAddress', this)" title="Verifica connessione">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z" /></svg>
                            </button>
                        </div>
                        <span asp-validation-for="IP_Address" class="text-danger"></span>
                        <div id="ipValidationResult" class="mt-2"></div>
                    </div>

                    <div class="machine-preview glass-card p-3 mb-3">
                        <h6 class="mb-2"><svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" class="me-2"><path d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" /></svg> Anteprima</h6>
                        <div class="d-flex align-items-center">
                            <div class="machine-icon me-3"><svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="text-primary"><path d="M12,3C7.58,3 4,4.79 4,7C4,9.21 7.58,11 12,11C16.42,11 20,9.21 20,7C20,4.79 16.42,3 12,3M4,9V12C4,14.21 7.58,16 12,16C16.42,16 20,14.21 20,12V9C20,11.21 16.42,13 12,13C7.58,13 4,11.21 4,9M4,14V17C4,19.21 7.58,21 12,21C16.42,21 20,19.21 20,17V14C20,16.21 16.42,18 12,18C7.58,18 4,16.21 4,14Z" /></svg></div>
                            <div>
                                <div id="previewName" class="preview-name fw-bold">Nome macchina</div>
                                <div id="previewIp" class="preview-ip text-muted">IP: Non specificato</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Annulla</button>
                    <button type="submit" class="btn btn-success">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" /></svg>
                        Salva Modifiche
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header modal-header-danger">
                <h5 class="modal-title" id="deleteConfirmModalLabel">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor" class="me-2"><path d="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,15H13V17H11V15M11,7H13V13H11V7Z" /></svg>
                    Conferma Eliminazione
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger d-flex align-items-center mb-4">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="me-3 flex-shrink-0"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" /></svg>
                    <div><strong>Attenzione!</strong> Questa azione è irreversibile.</div>
                </div>
                <p class="mb-3">Sei sicuro di voler eliminare la seguente macchina?</p>
                <div class="machine-details glass-card p-3">
                    <div class="d-flex align-items-center">
                        <div class="machine-icon me-3"><svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor" class="text-danger"><path d="M12,3C7.58,3 4,4.79 4,7C4,9.21 7.58,11 12,11C16.42,11 20,9.21 20,7C20,4.79 16.42,3 12,3M4,9V12C4,14.21 7.58,16 12,16C16.42,16 20,14.21 20,12V9C20,11.21 16.42,13 12,13C7.58,13 4,11.21 4,9M4,14V17C4,19.21 7.58,21 12,21C16.42,21 20,19.21 20,17V14C20,16.21 16.42,18 12,18C7.58,18 4,16.21 4,14Z" /></svg></div>
                        <div>
                            <div class="fw-bold fs-5" id="deleteMachineNameDisplay"></div>
                            <code class="ip-address" id="deleteMachineIpDisplay"></code>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Annulla</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" /></svg>
                    Elimina Definitivamente
                </button>
            </div>
        </div>
    </div>
</div>


<style>
    .machine-preview {
        background: rgba(59, 130, 246, 0.05);
    }

    .machine-details {
        border: 1px solid var(--primary-600);
        border-radius: var(--radius-lg);
    }

    .modal-header-danger {
        background: var(--accent-red-light);
        border-bottom-color: var(--accent-red);
        color: var(--accent-red);
    }

    .validation-spinner {
        border: 2px solid var(--primary-600);
        border-top-color: var(--accent-blue);
        border-radius: 50%;
        width: 16px;
        height: 16px;
        animation: spin 1s linear infinite;
        display: inline-block;
    }

    .ip-validation-success {
        border-color: var(--accent-green) !important;
    }

    .ip-validation-error {
        border-color: var(--accent-red) !important;
    }
</style>

<script>
    // Questo script può essere eseguito più volte se la partial viene caricata dinamicamente.
    // Ci assicuriamo che gli eventi vengano inizializzati una sola volta o in modo sicuro.
    function initializeModalScripts() {
        const nameInput = document.getElementById('editNomeMacchina');
        const ipInput = document.getElementById('editIPAddress');
        const previewName = document.getElementById('previewName');
        const previewIp = document.getElementById('previewIp');

        nameInput?.addEventListener('input', e => {
            previewName.textContent = e.target.value.trim() || 'Nome macchina';
        });
        ipInput?.addEventListener('input', e => {
            previewIp.textContent = `IP: ${e.target.value.trim() || 'Non specificato'}`;
        });
    }

    // Funzione globale per la validazione IP, richiamabile dall'HTML
    async function validateIPConnectivity(inputId, button) {
        const input = document.getElementById(inputId);
        const resultDiv = document.getElementById('ipValidationResult');
        const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;

        input.classList.remove('ip-validation-success', 'ip-validation-error');
        if (!input.value.trim() || !ipRegex.test(input.value.trim())) {
            input.classList.add('ip-validation-error');
            resultDiv.innerHTML = '<div class="alert alert-danger py-2">Formato IP non valido.</div>';
            return;
        }

        const originalContent = button.innerHTML;
        button.disabled = true;
        button.innerHTML = '<div class="validation-spinner"></div>';
        resultDiv.innerHTML = '<div class="alert alert-info py-2">Verifica connessione...</div>';

        try {
            const response = await fetch(`/Home/PingIpAddress?ipAddress=${encodeURIComponent(input.value.trim())}`);
            const data = await response.json();
            if (data.reachable) {
                input.classList.add('ip-validation-success');
                resultDiv.innerHTML = '<div class="alert alert-success py-2">Macchina online e raggiungibile.</div>';
                Toast.success('Macchina raggiungibile!');
            } else {
                input.classList.add('ip-validation-error');
                resultDiv.innerHTML = `<div class="alert alert-warning py-2">Macchina non raggiungibile (${data.error || 'Timeout'}).</div>`;
                Toast.warning('Macchina non raggiungibile.');
            }
        } catch (err) {
            input.classList.add('ip-validation-error');
            resultDiv.innerHTML = '<div class="alert alert-danger py-2">Errore di rete durante la verifica.</div>';
            Toast.error('Errore durante la verifica.');
        } finally {
            button.disabled = false;
            button.innerHTML = originalContent;
        }
    }

    // Inizializza gli script una volta che il DOM è pronto
    document.addEventListener('DOMContentLoaded', initializeModalScripts);
</script>